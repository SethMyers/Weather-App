{"ast":null,"code":"var _jsxFileName = \"/Users/sethmyers/Desktop/weather-app/client/src/components/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USERS = [{\n  id: 1,\n  username: \"SethMyers\",\n  password: \"test-password\"\n}];\nconst SECRET_KEY = process.env.REACT_APP_API_TOKEN;\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    const isAuthenticated = USERS.some(u => u.username === username && u.password === password);\n    if (isAuthenticated) {\n      if (SECRET_KEY == \"key-missing\") {\n        throw new Error(\"API Key is missing\");\n      }\n      const token = jwt.sign({\n        id: 1,\n        username\n      }, SECRET_KEY, {\n        expiresIn: \"1h\"\n      });\n      localStorage.setItem(\"token\", token);\n      navigate(\"/weather-app\");\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","USERS","id","username","password","SECRET_KEY","process","env","REACT_APP_API_TOKEN","LoginPage","_s","setUsername","setPassword","navigate","handleLogin","isAuthenticated","some","u","Error","token","jwt","sign","expiresIn","localStorage","setItem","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/sethmyers/Desktop/weather-app/client/src/components/LoginPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface User {\n  id: number;\n  username: string;\n  password: string;\n}\n\nconst USERS: User[] = [\n  { id: 1, username: \"SethMyers\", password: \"test-password\" },\n];\n\nconst SECRET_KEY: string = process.env.REACT_APP_API_TOKEN as string;\n\nconst LoginPage: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    const isAuthenticated = USERS.some(\n      (u) => u.username === username && u.password === password\n    );\n\n    if (isAuthenticated) {\n      if (SECRET_KEY == \"key-missing\") {\n        throw new Error(\"API Key is missing\");\n      }\n\n      const token = jwt.sign({ id: 1, username }, SECRET_KEY, {\n        expiresIn: \"1h\",\n      });\n      localStorage.setItem(\"token\", token);\n      navigate(\"/weather-app\");\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Weather Login</h1>\n      </header>\n      <div>\n        <p>Username:</p>\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <p>Password:</p>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button onClick={handleLogin}>Log in</button>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sethmyers/Desktop/weather-app/client/src/components/WeatherApp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./WeatherApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CITIES = [{\n  id: 6167865,\n  name: \"Toronto\",\n  country: \"CA\"\n}, {\n  id: 6094817,\n  name: \"Ottawa\",\n  country: \"CA\"\n}, {\n  id: 1850147,\n  name: \"Tokyo\",\n  country: \"JP\"\n}];\nconst WeatherApp = () => {\n  _s();\n  // State initialization\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState([]);\n  const [showForecast, setShowForecast] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [uniqueDates, setUniqueDates] = useState([]);\n  const [selectedDateButton, setSelectedDateButton] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\"); // Redirect to the login page\n  };\n\n  // Set city weather data if a city is selected\n  useEffect(() => {\n    setError(null);\n    if (selectedCity) {\n      // Fetch weather data\n      axios.get(`/weather/${selectedCity.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setWeatherData(response.data);\n        setLoading(false);\n      }).catch(error => {\n        const errorMessage = \"Error fetching weather data\";\n        console.error(errorMessage);\n        setError(errorMessage);\n        setLoading(false);\n      });\n      if (showForecast) {\n        // Fetch detailed forecast data\n        setLoading(true);\n        axios.get(`/forecast/${selectedCity.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          setForecastData(response.data.list);\n          setLoading(false);\n        }).catch(error => {\n          const errorMessage = \"Error fetching forecast data\";\n          console.error(errorMessage);\n          setError(errorMessage);\n          setLoading(false);\n        });\n      }\n    }\n  }, [selectedCity, showForecast]);\n\n  // Set dates if forecast data exists\n  useEffect(() => {\n    if (forecastData.length > 0) {\n      const dates = [...new Set(forecastData.map(item => item.dt_txt.split(\" \")[0]))];\n      setUniqueDates(dates);\n      setSelectedDate(dates[selectedDateButton]); // Auto-select the earliest date, remember date selection afterwards\n    }\n  }, [forecastData]);\n\n  // Set selected city when city is selected\n  const handleCitySelection = event => {\n    const cityName = event.target.value;\n    const city = CITIES.find(c => c.name === cityName) || null;\n    setSelectedCity(city);\n    setLoading(true);\n  };\n\n  // Set detailed forecast data if show forecast is clicked and a city is selected, and hide it if its already selected\n  const handleForecastClick = () => {\n    setShowForecast(!showForecast);\n  };\n\n  // Set current date selection if a different date is clicked\n  const handleDateClick = (date, index) => {\n    setSelectedDate(date);\n    setSelectedDateButton(index);\n  };\n\n  // Forecast data for current date\n  const filteredForecastData = forecastData.filter(item => item.dt_txt.split(\" \")[0] === selectedDate);\n  const kelvinToCelsius = kelvin => Math.round(kelvin - 273.15);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cityLabel\",\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: (selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.name) || \"\",\n      onChange: handleCitySelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), CITIES.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.name,\n        children: [city.name, \", \", city.country]\n      }, city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [kelvinToCelsius(weatherData.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind \", Math.round(weatherData.wind), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), !loading && !error && selectedCity && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleForecastClick,\n        children: showForecast ? \"Close\" : \"See Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), showForecast && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"forecast-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Temp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Min Temp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max Temp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredForecastData.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: forecast.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [kelvinToCelsius(forecast.temp), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [kelvinToCelsius(forecast.minTemp), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [kelvinToCelsius(forecast.maxTemp), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.round(forecast.wind), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: forecast.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), uniqueDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `date-button ${selectedDateButton === index ? \"selected-button\" : \"\"}`,\n          onClick: () => handleDateClick(date, index),\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"BfrXhMHY3mLsqH/5xxZhw4Z+rjk=\", false, function () {\n  return [useNavigate];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CITIES","id","name","country","WeatherApp","_s","selectedCity","setSelectedCity","weatherData","setWeatherData","forecastData","setForecastData","showForecast","setShowForecast","selectedDate","setSelectedDate","uniqueDates","setUniqueDates","selectedDateButton","setSelectedDateButton","loading","setLoading","error","setError","navigate","token","localStorage","getItem","handleLogout","removeItem","get","headers","Authorization","then","response","data","catch","errorMessage","console","list","length","dates","Set","map","item","dt_txt","split","handleCitySelection","event","cityName","target","value","city","find","c","handleForecastClick","handleDateClick","date","index","filteredForecastData","filter","kelvinToCelsius","kelvin","Math","round","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","disabled","main","description","temp","wind","onClick","forecast","minTemp","maxTemp","_c","$RefreshReg$"],"sources":["/Users/sethmyers/Desktop/weather-app/client/src/components/WeatherApp.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./WeatherApp.css\";\n\ninterface City {\n  id: number;\n  name: string;\n  country: string;\n}\n\nconst CITIES: City[] = [\n  { id: 6167865, name: \"Toronto\", country: \"CA\" },\n  { id: 6094817, name: \"Ottawa\", country: \"CA\" },\n  { id: 1850147, name: \"Tokyo\", country: \"JP\" },\n];\n\nconst WeatherApp: React.FC = () => {\n  // State initialization\n  const [selectedCity, setSelectedCity] = useState<City | null>(null);\n  const [weatherData, setWeatherData] = useState<any>(null);\n  const [forecastData, setForecastData] = useState<any[]>([]);\n  const [showForecast, setShowForecast] = useState(false);\n  const [selectedDate, setSelectedDate] = useState<string | null>(null);\n  const [uniqueDates, setUniqueDates] = useState<string[]>([]);\n  const [selectedDateButton, setSelectedDateButton] = useState<number>(0);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const navigate = useNavigate();\n\n  const token = localStorage.getItem(\"token\");\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\"); // Redirect to the login page\n  };\n\n  // Set city weather data if a city is selected\n  useEffect(() => {\n    setError(null);\n    if (selectedCity) {\n      // Fetch weather data\n      axios\n        .get(`/weather/${selectedCity.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then((response) => {\n          setWeatherData(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          const errorMessage = \"Error fetching weather data\";\n          console.error(errorMessage);\n          setError(errorMessage);\n          setLoading(false);\n        });\n\n      if (showForecast) {\n        // Fetch detailed forecast data\n        setLoading(true);\n        axios\n          .get(`/forecast/${selectedCity.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          })\n          .then((response) => {\n            setForecastData(response.data.list);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const errorMessage = \"Error fetching forecast data\";\n            console.error(errorMessage);\n            setError(errorMessage);\n            setLoading(false);\n          });\n      }\n    }\n  }, [selectedCity, showForecast]);\n\n  // Set dates if forecast data exists\n  useEffect(() => {\n    if (forecastData.length > 0) {\n      const dates = [\n        ...new Set(forecastData.map((item) => item.dt_txt.split(\" \")[0])),\n      ];\n\n      setUniqueDates(dates);\n      setSelectedDate(dates[selectedDateButton]); // Auto-select the earliest date, remember date selection afterwards\n    }\n  }, [forecastData]);\n\n  // Set selected city when city is selected\n  const handleCitySelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const cityName = event.target.value;\n    const city = CITIES.find((c) => c.name === cityName) || null;\n\n    setSelectedCity(city);\n    setLoading(true);\n  };\n\n  // Set detailed forecast data if show forecast is clicked and a city is selected, and hide it if its already selected\n  const handleForecastClick = () => {\n    setShowForecast(!showForecast);\n  };\n\n  // Set current date selection if a different date is clicked\n  const handleDateClick = (date: string, index: number) => {\n    setSelectedDate(date);\n    setSelectedDateButton(index);\n  };\n\n  // Forecast data for current date\n  const filteredForecastData = forecastData.filter(\n    (item) => item.dt_txt.split(\" \")[0] === selectedDate\n  );\n\n  const kelvinToCelsius = (kelvin: number): number =>\n    Math.round(kelvin - 273.15);\n\n  return (\n    <div>\n      <header>\n        <h1>Weather Forecast</h1>\n      </header>\n      {selectedCity && <div className=\"cityLabel\">City</div>}\n      <select value={selectedCity?.name || \"\"} onChange={handleCitySelection}>\n        <option value=\"\" disabled>\n          Select City\n        </option>\n        {CITIES.map((city) => (\n          <option key={city.id} value={city.name}>\n            {city.name}, {city.country}\n          </option>\n        ))}\n      </select>\n      {weatherData && (\n        <div>\n          <h2>{weatherData.main}</h2>\n          <p>{weatherData.description}</p>\n          <h2>{kelvinToCelsius(weatherData.temp)}°C</h2>\n          <p>Wind {Math.round(weatherData.wind)} m/s</p>\n        </div>\n      )}\n      {error && <div className=\"error\">{error}</div>}\n      {!loading && !error && selectedCity && (\n        <>\n          {/* Render the \"See Forecast\" button */}\n          <button onClick={handleForecastClick}>\n            {showForecast ? \"Close\" : \"See Forecast\"}\n          </button>\n          {/* Render the forecast table if showForecast is true */}\n          {showForecast && (\n            <div>\n              <table className=\"forecast-table\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Temp</th>\n                    <th>Min Temp</th>\n                    <th>Max Temp</th>\n                    <th>Wind</th>\n                    <th>Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredForecastData.map((forecast, index) => (\n                    <tr key={index}>\n                      <td>{forecast.date}</td>\n                      <td>{kelvinToCelsius(forecast.temp)}°C</td>\n                      <td>{kelvinToCelsius(forecast.minTemp)}°C</td>\n                      <td>{kelvinToCelsius(forecast.maxTemp)}°C</td>\n                      <td>{Math.round(forecast.wind)} m/s</td>\n                      <td>{forecast.description}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              {/* Render buttons for day selection */}\n              {uniqueDates.map((date, index) => (\n                <button\n                  key={index}\n                  className={`date-button ${\n                    selectedDateButton === index ? \"selected-button\" : \"\"\n                  }`}\n                  onClick={() => handleDateClick(date, index)}\n                >\n                  {date}\n                </button>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n      <div>\n        <button className=\"logout-button\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQ1B,MAAMC,MAAc,GAAG,CACrB;EAAEC,EAAE,EAAE,OAAO;EAAEC,IAAI,EAAE,SAAS;EAAEC,OAAO,EAAE;AAAK,CAAC,EAC/C;EAAEF,EAAE,EAAE,OAAO;EAAEC,IAAI,EAAE,QAAQ;EAAEC,OAAO,EAAE;AAAK,CAAC,EAC9C;EAAEF,EAAE,EAAE,OAAO;EAAEC,IAAI,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,CAC9C;AAED,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAQ,EAAE,CAAC;EAC3D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAgB,IAAI,CAAC;EACrE,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAW,EAAE,CAAC;EAC5D,MAAM,CAAC0B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3B,QAAQ,CAAS,CAAC,CAAC;EAEvE,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMgC,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAE9B,MAAM+B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;EACA/B,SAAS,CAAC,MAAM;IACd8B,QAAQ,CAAC,IAAI,CAAC;IACd,IAAIjB,YAAY,EAAE;MAChB;MACAX,KAAK,CACFmC,GAAG,CAAE,YAAWxB,YAAY,CAACL,EAAG,EAAC,EAAE;QAClC8B,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,KAAM;QACjC;MACF,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAK;QAClBzB,cAAc,CAACyB,QAAQ,CAACC,IAAI,CAAC;QAC7Bd,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDe,KAAK,CAAEd,KAAK,IAAK;QAChB,MAAMe,YAAY,GAAG,6BAA6B;QAClDC,OAAO,CAAChB,KAAK,CAACe,YAAY,CAAC;QAC3Bd,QAAQ,CAACc,YAAY,CAAC;QACtBhB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;MAEJ,IAAIT,YAAY,EAAE;QAChB;QACAS,UAAU,CAAC,IAAI,CAAC;QAChB1B,KAAK,CACFmC,GAAG,CAAE,aAAYxB,YAAY,CAACL,EAAG,EAAC,EAAE;UACnC8B,OAAO,EAAE;YACPC,aAAa,EAAG,UAASP,KAAM;UACjC;QACF,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAK;UAClBvB,eAAe,CAACuB,QAAQ,CAACC,IAAI,CAACI,IAAI,CAAC;UACnClB,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC,CACDe,KAAK,CAAEd,KAAK,IAAK;UAChB,MAAMe,YAAY,GAAG,8BAA8B;UACnDC,OAAO,CAAChB,KAAK,CAACe,YAAY,CAAC;UAC3Bd,QAAQ,CAACc,YAAY,CAAC;UACtBhB,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC;MACN;IACF;EACF,CAAC,EAAE,CAACf,YAAY,EAAEM,YAAY,CAAC,CAAC;;EAEhC;EACAnB,SAAS,CAAC,MAAM;IACd,IAAIiB,YAAY,CAAC8B,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,KAAK,GAAG,CACZ,GAAG,IAAIC,GAAG,CAAChC,YAAY,CAACiC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClE;MAED7B,cAAc,CAACwB,KAAK,CAAC;MACrB1B,eAAe,CAAC0B,KAAK,CAACvB,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMqC,mBAAmB,GAAIC,KAA2C,IAAK;IAC3E,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnC,MAAMC,IAAI,GAAGpD,MAAM,CAACqD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACpD,IAAI,KAAK+C,QAAQ,CAAC,IAAI,IAAI;IAE5D1C,eAAe,CAAC6C,IAAI,CAAC;IACrB/B,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMkC,mBAAmB,GAAGA,CAAA,KAAM;IAChC1C,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;;EAED;EACA,MAAM4C,eAAe,GAAGA,CAACC,IAAY,EAAEC,KAAa,KAAK;IACvD3C,eAAe,CAAC0C,IAAI,CAAC;IACrBtC,qBAAqB,CAACuC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGjD,YAAY,CAACkD,MAAM,CAC7ChB,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKhC,YAC1C,CAAC;EAED,MAAM+C,eAAe,GAAIC,MAAc,IACrCC,IAAI,CAACC,KAAK,CAACF,MAAM,GAAG,MAAM,CAAC;EAE7B,oBACEjE,OAAA;IAAAoE,QAAA,gBACEpE,OAAA;MAAAoE,QAAA,eACEpE,OAAA;QAAAoE,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EACR/D,YAAY,iBAAIT,OAAA;MAAKyE,SAAS,EAAC,WAAW;MAAAL,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtDxE,OAAA;MAAQsD,KAAK,EAAE,CAAA7C,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEJ,IAAI,KAAI,EAAG;MAACqE,QAAQ,EAAExB,mBAAoB;MAAAkB,QAAA,gBACrEpE,OAAA;QAAQsD,KAAK,EAAC,EAAE;QAACqB,QAAQ;QAAAP,QAAA,EAAC;MAE1B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRrE,MAAM,CAAC2C,GAAG,CAAES,IAAI,iBACfvD,OAAA;QAAsBsD,KAAK,EAAEC,IAAI,CAAClD,IAAK;QAAA+D,QAAA,GACpCb,IAAI,CAAClD,IAAI,EAAC,IAAE,EAACkD,IAAI,CAACjD,OAAO;MAAA,GADfiD,IAAI,CAACnD,EAAE;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACR7D,WAAW,iBACVX,OAAA;MAAAoE,QAAA,gBACEpE,OAAA;QAAAoE,QAAA,EAAKzD,WAAW,CAACiE;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BxE,OAAA;QAAAoE,QAAA,EAAIzD,WAAW,CAACkE;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCxE,OAAA;QAAAoE,QAAA,GAAKJ,eAAe,CAACrD,WAAW,CAACmE,IAAI,CAAC,EAAC,OAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CxE,OAAA;QAAAoE,QAAA,GAAG,OAAK,EAACF,IAAI,CAACC,KAAK,CAACxD,WAAW,CAACoE,IAAI,CAAC,EAAC,MAAI;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN,EACA/C,KAAK,iBAAIzB,OAAA;MAAKyE,SAAS,EAAC,OAAO;MAAAL,QAAA,EAAE3C;IAAK;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7C,CAACjD,OAAO,IAAI,CAACE,KAAK,IAAIhB,YAAY,iBACjCT,OAAA,CAAAE,SAAA;MAAAkE,QAAA,gBAEEpE,OAAA;QAAQgF,OAAO,EAAEtB,mBAAoB;QAAAU,QAAA,EAClCrD,YAAY,GAAG,OAAO,GAAG;MAAc;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EAERzD,YAAY,iBACXf,OAAA;QAAAoE,QAAA,gBACEpE,OAAA;UAAOyE,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAC/BpE,OAAA;YAAAoE,QAAA,eACEpE,OAAA;cAAAoE,QAAA,gBACEpE,OAAA;gBAAAoE,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxE,OAAA;gBAAAoE,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxE,OAAA;gBAAAoE,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBxE,OAAA;gBAAAoE,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBxE,OAAA;gBAAAoE,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxE,OAAA;gBAAAoE,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRxE,OAAA;YAAAoE,QAAA,EACGN,oBAAoB,CAAChB,GAAG,CAAC,CAACmC,QAAQ,EAAEpB,KAAK,kBACxC7D,OAAA;cAAAoE,QAAA,gBACEpE,OAAA;gBAAAoE,QAAA,EAAKa,QAAQ,CAACrB;cAAI;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxBxE,OAAA;gBAAAoE,QAAA,GAAKJ,eAAe,CAACiB,QAAQ,CAACH,IAAI,CAAC,EAAC,OAAE;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3CxE,OAAA;gBAAAoE,QAAA,GAAKJ,eAAe,CAACiB,QAAQ,CAACC,OAAO,CAAC,EAAC,OAAE;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC9CxE,OAAA;gBAAAoE,QAAA,GAAKJ,eAAe,CAACiB,QAAQ,CAACE,OAAO,CAAC,EAAC,OAAE;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC9CxE,OAAA;gBAAAoE,QAAA,GAAKF,IAAI,CAACC,KAAK,CAACc,QAAQ,CAACF,IAAI,CAAC,EAAC,MAAI;cAAA;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxCxE,OAAA;gBAAAoE,QAAA,EAAKa,QAAQ,CAACJ;cAAW;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GANxBX,KAAK;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEPrD,WAAW,CAAC2B,GAAG,CAAC,CAACc,IAAI,EAAEC,KAAK,kBAC3B7D,OAAA;UAEEyE,SAAS,EAAG,eACVpD,kBAAkB,KAAKwC,KAAK,GAAG,iBAAiB,GAAG,EACpD,EAAE;UACHmB,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAACC,IAAI,EAAEC,KAAK,CAAE;UAAAO,QAAA,EAE3CR;QAAI,GANAC,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOJ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA,eACD,CACH,eACDxE,OAAA;MAAAoE,QAAA,eACEpE,OAAA;QAAQyE,SAAS,EAAC,eAAe;QAACO,OAAO,EAAEjD,YAAa;QAAAqC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChE,EAAA,CA5LID,UAAoB;EAAA,QAaPV,WAAW;AAAA;AAAAuF,EAAA,GAbxB7E,UAAoB;AA8L1B,eAAeA,UAAU;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sethmyers/Desktop/weather-app/client/src/components/WeatherApp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../services/authService\";\nimport axios from \"axios\";\nimport \"./WeatherApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CITIES = [{\n  id: 6167865,\n  name: \"Toronto\",\n  country: \"CA\"\n}, {\n  id: 6094817,\n  name: \"Ottawa\",\n  country: \"CA\"\n}, {\n  id: 1850147,\n  name: \"Tokyo\",\n  country: \"JP\"\n}];\nconst WeatherApp = () => {\n  _s();\n  // State initialization\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState([]);\n  const [showForecast, setShowForecast] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [uniqueDates, setUniqueDates] = useState([]);\n  const [selectedDateButton, setSelectedDateButton] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const token = authService.getToken();\n  const handleLogout = () => {\n    authService.setToken(\"\");\n    navigate(\"/\"); // Redirect to the login page\n  };\n\n  // Set city weather data if a city is selected\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      if (selectedCity) {\n        try {\n          // Fetch weather data\n          setLoading(true);\n          const weatherResponse = await axios.get(`/weather/${selectedCity.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setWeatherData(weatherResponse.data);\n          if (showForecast) {\n            // Fetch detailed forecast data\n            setLoading(true);\n            const forecastResponse = await axios.get(`/forecast/${selectedCity.id}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            setForecastData(forecastResponse.data);\n          }\n        } catch (error) {\n          console.error(error);\n          setError(\"Error fetching data\");\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchData();\n  }, [selectedCity, showForecast]);\n\n  // Set dates if forecast data exists\n  useEffect(() => {\n    if (forecastData.length > 0) {\n      const dates = [...new Set(forecastData.map(item => {\n        const dateParts = item.date.split(\" \");\n        return `${dateParts[0]} ${dateParts[1]}`;\n      }))];\n      setUniqueDates(dates);\n      setSelectedDate(dates[selectedDateButton]); // Auto-select the earliest date, remember date selection afterwards\n    }\n  }, [forecastData]);\n\n  // Set selected city when city is selected\n  const handleCitySelection = event => {\n    const cityName = event.target.value;\n    const city = CITIES.find(c => c.name === cityName) || null;\n    setSelectedCity(city);\n    setLoading(true);\n  };\n\n  // Set detailed forecast data if show forecast is clicked and a city is selected, and hide it if its already selected\n  const handleForecastClick = () => {\n    setShowForecast(!showForecast);\n  };\n\n  // Set current date selection if a different date is clicked\n  const handleDateClick = (date, index) => {\n    setSelectedDate(date);\n    setSelectedDateButton(index);\n  };\n\n  // Forecast data for current date\n  const filteredForecastData = forecastData.filter(item => {\n    const dateParts = item.date.split(\" \");\n    return `${dateParts[0]} ${dateParts[1]}` === selectedDate;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cityLabel\",\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: (selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.name) || \"\",\n      onChange: handleCitySelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), CITIES.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.name,\n        children: [city.name, \", \", city.country]\n      }, city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [weatherData.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind \", weatherData.wind, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), !loading && !error && selectedCity && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleForecastClick,\n        children: showForecast ? \"Close\" : \"See Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), showForecast && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"forecast-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Temp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Min Temp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max Temp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredForecastData.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: forecast.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [forecast.temp, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [forecast.minTemp, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [forecast.maxTemp, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [forecast.wind, \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: forecast.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), uniqueDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `date-button ${selectedDateButton === index ? \"selected-button\" : \"\"}`,\n          onClick: () => handleDateClick(date, index),\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"BfrXhMHY3mLsqH/5xxZhw4Z+rjk=\", false, function () {\n  return [useNavigate];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authService","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CITIES","id","name","country","WeatherApp","_s","selectedCity","setSelectedCity","weatherData","setWeatherData","forecastData","setForecastData","showForecast","setShowForecast","selectedDate","setSelectedDate","uniqueDates","setUniqueDates","selectedDateButton","setSelectedDateButton","loading","setLoading","error","setError","navigate","token","getToken","handleLogout","setToken","fetchData","weatherResponse","get","headers","Authorization","data","forecastResponse","console","length","dates","Set","map","item","dateParts","date","split","handleCitySelection","event","cityName","target","value","city","find","c","handleForecastClick","handleDateClick","index","filteredForecastData","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","main","description","temp","wind","onClick","forecast","minTemp","maxTemp","_c","$RefreshReg$"],"sources":["/Users/sethmyers/Desktop/weather-app/client/src/components/WeatherApp.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../services/authService\";\nimport axios from \"axios\";\nimport \"./WeatherApp.css\";\n\ninterface City {\n  id: number;\n  name: string;\n  country: string;\n}\n\nconst CITIES: City[] = [\n  { id: 6167865, name: \"Toronto\", country: \"CA\" },\n  { id: 6094817, name: \"Ottawa\", country: \"CA\" },\n  { id: 1850147, name: \"Tokyo\", country: \"JP\" },\n];\n\nconst WeatherApp: React.FC = () => {\n  // State initialization\n  const [selectedCity, setSelectedCity] = useState<City | null>(null);\n  const [weatherData, setWeatherData] = useState<any>(null);\n  const [forecastData, setForecastData] = useState<any[]>([]);\n  const [showForecast, setShowForecast] = useState(false);\n  const [selectedDate, setSelectedDate] = useState<string | null>(null);\n  const [uniqueDates, setUniqueDates] = useState<string[]>([]);\n  const [selectedDateButton, setSelectedDateButton] = useState<number>(0);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const navigate = useNavigate();\n\n  const token = authService.getToken();\n\n  const handleLogout = () => {\n    authService.setToken(\"\");\n    navigate(\"/\"); // Redirect to the login page\n  };\n\n  // Set city weather data if a city is selected\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      if (selectedCity) {\n        try {\n          // Fetch weather data\n          setLoading(true);\n          const weatherResponse = await axios.get(\n            `/weather/${selectedCity.id}`,\n            {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          );\n          setWeatherData(weatherResponse.data);\n\n          if (showForecast) {\n            // Fetch detailed forecast data\n            setLoading(true);\n            const forecastResponse = await axios.get(\n              `/forecast/${selectedCity.id}`,\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            );\n            setForecastData(forecastResponse.data);\n          }\n        } catch (error) {\n          console.error(error);\n          setError(\"Error fetching data\");\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchData();\n  }, [selectedCity, showForecast]);\n\n  // Set dates if forecast data exists\n  useEffect(() => {\n    if (forecastData.length > 0) {\n      const dates = [\n        ...new Set(\n          forecastData.map((item) => {\n            const dateParts = item.date.split(\" \");\n            return `${dateParts[0]} ${dateParts[1]}`;\n          })\n        ),\n      ];\n\n      setUniqueDates(dates);\n      setSelectedDate(dates[selectedDateButton]); // Auto-select the earliest date, remember date selection afterwards\n    }\n  }, [forecastData]);\n\n  // Set selected city when city is selected\n  const handleCitySelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const cityName = event.target.value;\n    const city = CITIES.find((c) => c.name === cityName) || null;\n\n    setSelectedCity(city);\n    setLoading(true);\n  };\n\n  // Set detailed forecast data if show forecast is clicked and a city is selected, and hide it if its already selected\n  const handleForecastClick = () => {\n    setShowForecast(!showForecast);\n  };\n\n  // Set current date selection if a different date is clicked\n  const handleDateClick = (date: string, index: number) => {\n    setSelectedDate(date);\n    setSelectedDateButton(index);\n  };\n\n  // Forecast data for current date\n  const filteredForecastData = forecastData.filter((item) => {\n    const dateParts = item.date.split(\" \");\n    return `${dateParts[0]} ${dateParts[1]}` === selectedDate;\n  });\n\n  return (\n    <div className=\"page-container\">\n      <header>\n        <h1>Weather Forecast</h1>\n      </header>\n      {selectedCity && <div className=\"cityLabel\">City</div>}\n      <select value={selectedCity?.name || \"\"} onChange={handleCitySelection}>\n        <option value=\"\" disabled>\n          Select City\n        </option>\n        {CITIES.map((city) => (\n          <option key={city.id} value={city.name}>\n            {city.name}, {city.country}\n          </option>\n        ))}\n      </select>\n      {weatherData && (\n        <div>\n          <h2>{weatherData.main}</h2>\n          <p>{weatherData.description}</p>\n          <h2>{weatherData.temp}°C</h2>\n          <p>Wind {weatherData.wind} m/s</p>\n        </div>\n      )}\n      {error && <div className=\"error\">{error}</div>}\n      {!loading && !error && selectedCity && (\n        <>\n          {/* Render the \"See Forecast\" button */}\n          <button onClick={handleForecastClick}>\n            {showForecast ? \"Close\" : \"See Forecast\"}\n          </button>\n          {/* Render the forecast table if showForecast is true */}\n          {showForecast && (\n            <div>\n              <table className=\"forecast-table\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Temp</th>\n                    <th>Min Temp</th>\n                    <th>Max Temp</th>\n                    <th>Wind</th>\n                    <th>Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredForecastData.map((forecast, index) => (\n                    <tr key={index}>\n                      <td>{forecast.date}</td>\n                      <td>{forecast.temp}°C</td>\n                      <td>{forecast.minTemp}°C</td>\n                      <td>{forecast.maxTemp}°C</td>\n                      <td>{forecast.wind} m/s</td>\n                      <td>{forecast.description}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              {/* Render buttons for day selection */}\n              {uniqueDates.map((date, index) => (\n                <button\n                  key={index}\n                  className={`date-button ${\n                    selectedDateButton === index ? \"selected-button\" : \"\"\n                  }`}\n                  onClick={() => handleDateClick(date, index)}\n                >\n                  {date}\n                </button>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n      <div>\n        <button className=\"logout-button\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}